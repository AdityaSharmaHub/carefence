// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String?
  auth0Id        String   @unique
  role           Role     @default(WORKER)
  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  shifts         Shift[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("users")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  latitude  Float
  longitude Float
  perimeter Float    @default(2000) // radius in meters
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("organizations")
}

model Shift {
  id                String    @id @default(cuid())
  userId            String
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  clockInTime       DateTime
  clockInLatitude   Float
  clockInLongitude  Float
  clockInNote       String?
  clockOutTime      DateTime?
  clockOutLatitude  Float?
  clockOutLongitude Float?
  clockOutNote      String?
  duration          Int?      // duration in minutes
  status            ShiftStatus @default(ACTIVE)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  @@map("shifts")
}

enum Role {
  MANAGER
  WORKER
}

enum ShiftStatus {
  ACTIVE
  COMPLETED
}